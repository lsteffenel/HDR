%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel rc1
%%CreationDate: Sat Mar 10 12:45:49 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 528 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc1)
  /Author (angelo,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 10 12:45:49 2007)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.1 (March 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1386 420 M
63 0 V
7889 0 R
-63 0 V
-7973 0 R
( 3.05176e-05) Rshow
1.000 UL
LTb
1386 588 M
31 0 V
7921 0 R
-31 0 V
1386 756 M
31 0 V
7921 0 R
-31 0 V
1386 924 M
31 0 V
7921 0 R
-31 0 V
1386 1092 M
31 0 V
7921 0 R
-31 0 V
1386 1260 M
63 0 V
7889 0 R
-63 0 V
-7973 0 R
( 0.000976562) Rshow
1.000 UL
LTb
1386 1428 M
31 0 V
7921 0 R
-31 0 V
1386 1596 M
31 0 V
7921 0 R
-31 0 V
1386 1764 M
31 0 V
7921 0 R
-31 0 V
1386 1932 M
31 0 V
7921 0 R
-31 0 V
1386 2100 M
63 0 V
7889 0 R
-63 0 V
-7973 0 R
( 0.03125) Rshow
1.000 UL
LTb
1386 2268 M
31 0 V
7921 0 R
-31 0 V
1386 2436 M
31 0 V
7921 0 R
-31 0 V
1386 2604 M
31 0 V
7921 0 R
-31 0 V
1386 2772 M
31 0 V
7921 0 R
-31 0 V
1386 2940 M
63 0 V
7889 0 R
-63 0 V
-7973 0 R
( 1) Rshow
1.000 UL
LTb
1386 3108 M
31 0 V
7921 0 R
-31 0 V
1386 3276 M
31 0 V
7921 0 R
-31 0 V
1386 3444 M
31 0 V
7921 0 R
-31 0 V
1386 3612 M
31 0 V
7921 0 R
-31 0 V
1386 3780 M
63 0 V
7889 0 R
-63 0 V
-7973 0 R
( 32) Rshow
1.000 UL
LTb
1386 3948 M
31 0 V
7921 0 R
-31 0 V
1386 4116 M
31 0 V
7921 0 R
-31 0 V
1386 4284 M
31 0 V
7921 0 R
-31 0 V
1386 4452 M
31 0 V
7921 0 R
-31 0 V
1386 4620 M
63 0 V
7889 0 R
-63 0 V
-7973 0 R
( 1024) Rshow
1.000 UL
LTb
1386 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1) Cshow
1.000 UL
LTb
1704 420 M
0 31 V
0 4169 R
0 -31 V
2022 420 M
0 31 V
0 4169 R
0 -31 V
2340 420 M
0 31 V
0 4169 R
0 -31 V
2658 420 M
0 31 V
0 4169 R
0 -31 V
2976 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 32) Cshow
1.000 UL
LTb
3294 420 M
0 31 V
0 4169 R
0 -31 V
3613 420 M
0 31 V
0 4169 R
0 -31 V
3931 420 M
0 31 V
0 4169 R
0 -31 V
4249 420 M
0 31 V
0 4169 R
0 -31 V
4567 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1024) Cshow
1.000 UL
LTb
4885 420 M
0 31 V
0 4169 R
0 -31 V
5203 420 M
0 31 V
0 4169 R
0 -31 V
5521 420 M
0 31 V
0 4169 R
0 -31 V
5839 420 M
0 31 V
0 4169 R
0 -31 V
6157 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 32768) Cshow
1.000 UL
LTb
6475 420 M
0 31 V
0 4169 R
0 -31 V
6793 420 M
0 31 V
0 4169 R
0 -31 V
7111 420 M
0 31 V
0 4169 R
0 -31 V
7430 420 M
0 31 V
0 4169 R
0 -31 V
7748 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1.04858e+06) Cshow
1.000 UL
LTb
8066 420 M
0 31 V
0 4169 R
0 -31 V
8384 420 M
0 31 V
0 4169 R
0 -31 V
8702 420 M
0 31 V
0 4169 R
0 -31 V
9020 420 M
0 31 V
0 4169 R
0 -31 V
9338 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3.35544e+07) Cshow
1.000 UL
LTb
1.000 UL
LTb
1386 4620 N
0 -4200 V
7952 0 V
0 4200 V
-7952 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Completion time \(s\)) Cshow
grestore
LTb
LCb setrgbcolor
5362 70 M
(Message size \(bytes\)) Cshow
LTb
5362 4830 M
(MPI_Alltoall performance on a 30+30 grid) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
3150 4487 M
(OpenMPI Alltoall) Rshow
LT0
3234 4487 M
399 0 V
1386 2223 M
318 31 V
318 -1 V
318 0 V
318 83 V
318 -83 V
318 0 V
319 0 V
318 1 V
318 0 V
318 1 V
318 2 V
318 340 V
318 223 V
318 117 V
318 89 V
318 241 V
318 82 V
318 118 V
319 67 V
318 46 V
318 43 V
318 125 V
318 144 V
318 155 V
1386 2223 Pls
1704 2254 Pls
2022 2253 Pls
2340 2253 Pls
2658 2336 Pls
2976 2253 Pls
3294 2253 Pls
3613 2253 Pls
3931 2254 Pls
4249 2254 Pls
4567 2255 Pls
4885 2257 Pls
5203 2597 Pls
5521 2820 Pls
5839 2937 Pls
6157 3026 Pls
6475 3267 Pls
6793 3349 Pls
7111 3467 Pls
7430 3534 Pls
7748 3580 Pls
8066 3623 Pls
8384 3748 Pls
8702 3892 Pls
9020 4047 Pls
3433 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
3150 4347 M
(Composite estimation) Rshow
LT1
3234 4347 M
399 0 V
1386 2242 M
318 -1 V
318 1 V
318 0 V
318 0 V
318 -1 V
318 1 V
319 0 V
318 1 V
318 4 V
318 4 V
318 19 V
318 9 V
318 11 V
318 28 V
318 45 V
318 416 V
318 128 V
318 33 V
319 150 V
318 162 V
318 164 V
318 168 V
318 167 V
318 167 V
1386 2242 Crs
1704 2241 Crs
2022 2242 Crs
2340 2242 Crs
2658 2242 Crs
2976 2241 Crs
3294 2242 Crs
3613 2242 Crs
3931 2243 Crs
4249 2247 Crs
4567 2251 Crs
4885 2270 Crs
5203 2279 Crs
5521 2290 Crs
5839 2318 Crs
6157 2363 Crs
6475 2779 Crs
6793 2907 Crs
7111 2940 Crs
7430 3090 Crs
7748 3252 Crs
8066 3416 Crs
8384 3584 Crs
8702 3751 Crs
9020 3918 Crs
3433 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
3150 4207 M
(- wide-area part) Rshow
LT2
3234 4207 M
399 0 V
1386 2241 M
318 0 V
318 0 V
318 0 V
318 0 V
318 0 V
318 0 V
319 0 V
318 1 V
318 1 V
318 2 V
318 4 V
318 2 V
318 3 V
318 10 V
318 17 V
318 470 V
318 126 V
318 12 V
319 149 V
318 161 V
318 164 V
318 168 V
318 168 V
318 166 V
1386 2241 Star
1704 2241 Star
2022 2241 Star
2340 2241 Star
2658 2241 Star
2976 2241 Star
3294 2241 Star
3613 2241 Star
3931 2242 Star
4249 2243 Star
4567 2245 Star
4885 2249 Star
5203 2251 Star
5521 2254 Star
5839 2264 Star
6157 2281 Star
6475 2751 Star
6793 2877 Star
7111 2889 Star
7430 3038 Star
7748 3199 Star
8066 3363 Star
8384 3531 Star
8702 3699 Star
9020 3865 Star
3433 4207 Star
1.000 UP
1.000 UL
LT3
LTb
3150 4067 M
(- local-area part) Rshow
LT3
3234 4067 M
399 0 V
1386 858 M
1704 674 L
318 172 V
2340 744 L
318 0 V
318 -70 V
318 160 V
319 -67 V
318 159 V
318 333 V
318 82 V
318 332 V
318 68 V
318 63 V
318 122 V
318 134 V
318 183 V
318 136 V
318 155 V
319 159 V
318 164 V
318 165 V
318 167 V
318 167 V
318 168 V
1386 858 Box
1704 674 Box
2022 846 Box
2340 744 Box
2658 744 Box
2976 674 Box
3294 834 Box
3613 767 Box
3931 926 Box
4249 1259 Box
4567 1341 Box
4885 1673 Box
5203 1741 Box
5521 1804 Box
5839 1926 Box
6157 2060 Box
6475 2243 Box
6793 2379 Box
7111 2534 Box
7430 2693 Box
7748 2857 Box
8066 3022 Box
8384 3189 Box
8702 3356 Box
9020 3524 Box
3433 4067 Box
1.000 UL
LTb
1386 4620 N
0 -4200 V
7952 0 V
0 4200 V
-7952 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
